server:
  port: 8080
spring:
  application:
    name: chihx-sharding-jdbc
  sharding-sphere:
    # 打印执行的数据库以及语句
    props:
      sql:
        show: true
    datasource:
      # 数据源 db0 ds1
      names: ds0,ds1
      # 第一个数据库
      ds0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://chihx.cn:3306/chihx_jdbc1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        password: yourpassword
        type: com.zaxxer.hikari.HikariDataSource
        username: root
      # 第二个数据库
      ds1:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://chihx.cn:3306/chihx_jdbc2?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        password: yourpassword
        type: com.zaxxer.hikari.HikariDataSource
        username: root
    sharding:
      tables:
        product_order:
          # 指定product_order表的数据分布情况，配置数据节点,行表达式标识符使用 ${...} 或 $->{...}，但前者与 Spring 本身的文件占位符冲突，所以在 Spring 环境中建议使用 $->{...}
          actual-data-nodes: ds0.product_order_$->{0..1}
          # 指定product_order表的分片策略，分片策略包括【分片键和分片算法】
          table-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: product_order_$->{user_id % 2}
logging:
  level:
    root: info

